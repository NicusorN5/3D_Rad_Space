# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: C++ CMake on Windows-x64

env: 
    VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

defaults:
  run:
    shell: powershell

on:
  workflow_call:

jobs:
  restore:
    name: vcpkg restore
    uses: ./.github/workflows/vcpkg_restore.yml
    
  build:
    runs-on: [windows-latest, x64, gpu, self-hosted]
    needs: restore
    steps:
    - uses: actions/checkout@v4

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: >
        cmake -B ${{ github.workspace }}/build
        -DCMAKE_CXX_COMPILER=cl
        -DCMAKE_C_COMPILER=$cl
        -DCMAKE_BUILD_TYPE=Release
        -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
        -DVCPKG_TARGET_TRIPLET=x64-windows-release
        -DVCPKG_MANIFEST_MODE=OFF
        -S ${{ github.workspace }}/3DRadSpace

    - name: Build
      # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
      run: cmake --build ${{ github.workspace }}/build --config Release 
